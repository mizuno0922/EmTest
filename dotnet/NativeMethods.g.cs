// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace CsBindgen
{
    internal static unsafe partial class NativeMethods
    {
        const string __DllName = "emarfcore_rs_example";



        [DllImport(__DllName, EntryPoint = "my_add", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int my_add(int x, int y);

        [DllImport(__DllName, EntryPoint = "create_cube", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern IntPtr create_cube(double size);

        [DllImport(__DllName, EntryPoint = "free_polygon_mesh", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void free_polygon_mesh(IntPtr ptr);

         [DllImport(__DllName, EntryPoint = "get_vertices", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern float* get_vertices(IntPtr mesh);

        [DllImport(__DllName, EntryPoint = "get_faces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int* get_faces(IntPtr mesh);

        // C#側のP/Invoke宣言
        [DllImport(__DllName, EntryPoint = "get_vertex_count", CallingConvention = CallingConvention.Cdecl)]
        public static extern int get_vertex_count(IntPtr mesh);

        [DllImport(__DllName, EntryPoint = "get_face_count", CallingConvention = CallingConvention.Cdecl)]
        public static extern int get_face_count(IntPtr mesh);

        [DllImport(__DllName, EntryPoint = "free_vertices", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void free_vertices(IntPtr ptr);

        [DllImport(__DllName, EntryPoint = "free_faces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void free_faces(IntPtr ptr);


    }



}
